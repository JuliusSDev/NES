ARM GAS  /tmp/ccplaowz.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB335:
  27              		.file 1 "Src/stm32h7xx_it.c"
   1:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32h7xx_it.c **** /**
   3:Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Src/stm32h7xx_it.c ****   * @attention
   8:Src/stm32h7xx_it.c ****   *
   9:Src/stm32h7xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Src/stm32h7xx_it.c ****   *
  12:Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32h7xx_it.c ****   *
  16:Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Src/stm32h7xx_it.c ****   */
  18:Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Src/stm32h7xx_it.c **** 
  20:Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32h7xx_it.c **** #include "main.h"
  22:Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32h7xx_it.c **** 
  27:Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32h7xx_it.c **** 
  30:Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Src/stm32h7xx_it.c **** 
ARM GAS  /tmp/ccplaowz.s 			page 2


  32:Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32h7xx_it.c **** 
  35:Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Src/stm32h7xx_it.c **** 
  37:Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32h7xx_it.c **** 
  40:Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Src/stm32h7xx_it.c **** 
  42:Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32h7xx_it.c **** 
  45:Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Src/stm32h7xx_it.c **** 
  47:Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32h7xx_it.c **** 
  50:Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32h7xx_it.c **** 
  52:Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32h7xx_it.c **** 
  55:Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32h7xx_it.c **** 
  57:Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Src/stm32h7xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:Src/stm32h7xx_it.c **** extern ADC_HandleTypeDef hadc2;
  61:Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch1;
  62:Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch2;
  63:Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim1;
  64:Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32h7xx_it.c **** 
  66:Src/stm32h7xx_it.c **** /* USER CODE END EV */
  67:Src/stm32h7xx_it.c **** 
  68:Src/stm32h7xx_it.c **** /******************************************************************************/
  69:Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  70:Src/stm32h7xx_it.c **** /******************************************************************************/
  71:Src/stm32h7xx_it.c **** /**
  72:Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32h7xx_it.c ****   */
  74:Src/stm32h7xx_it.c **** void NMI_Handler(void)
  75:Src/stm32h7xx_it.c **** {
  28              		.loc 1 75 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  76:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32h7xx_it.c **** 
  78:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32h7xx_it.c ****    while (1)
  35              		.loc 1 80 4 discriminator 1 view .LVU1
ARM GAS  /tmp/ccplaowz.s 			page 3


  81:Src/stm32h7xx_it.c ****   {
  82:Src/stm32h7xx_it.c ****   }
  36              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Src/stm32h7xx_it.c ****   {
  37              		.loc 1 80 10 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE335:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB336:
  83:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32h7xx_it.c **** }
  85:Src/stm32h7xx_it.c **** 
  86:Src/stm32h7xx_it.c **** /**
  87:Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32h7xx_it.c ****   */
  89:Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32h7xx_it.c **** {
  51              		.loc 1 90 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  91:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32h7xx_it.c **** 
  93:Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Src/stm32h7xx_it.c ****   {
  96:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32h7xx_it.c ****   }
  59              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Src/stm32h7xx_it.c ****   {
  60              		.loc 1 94 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE336:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB337:
  99:Src/stm32h7xx_it.c **** }
 100:Src/stm32h7xx_it.c **** 
 101:Src/stm32h7xx_it.c **** /**
ARM GAS  /tmp/ccplaowz.s 			page 4


 102:Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 103:Src/stm32h7xx_it.c ****   */
 104:Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 105:Src/stm32h7xx_it.c **** {
  74              		.loc 1 105 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 106:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Src/stm32h7xx_it.c **** 
 108:Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Src/stm32h7xx_it.c ****   {
 111:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Src/stm32h7xx_it.c ****   }
  82              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Src/stm32h7xx_it.c ****   {
  83              		.loc 1 109 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE337:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB338:
 114:Src/stm32h7xx_it.c **** }
 115:Src/stm32h7xx_it.c **** 
 116:Src/stm32h7xx_it.c **** /**
 117:Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Src/stm32h7xx_it.c ****   */
 119:Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 120:Src/stm32h7xx_it.c **** {
  97              		.loc 1 120 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 121:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Src/stm32h7xx_it.c **** 
 123:Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Src/stm32h7xx_it.c ****   while (1)
 104              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Src/stm32h7xx_it.c ****   {
 126:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Src/stm32h7xx_it.c ****   }
ARM GAS  /tmp/ccplaowz.s 			page 5


 105              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Src/stm32h7xx_it.c ****   {
 106              		.loc 1 124 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE338:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB339:
 129:Src/stm32h7xx_it.c **** }
 130:Src/stm32h7xx_it.c **** 
 131:Src/stm32h7xx_it.c **** /**
 132:Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Src/stm32h7xx_it.c ****   */
 134:Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 135:Src/stm32h7xx_it.c **** {
 120              		.loc 1 135 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 136:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Src/stm32h7xx_it.c **** 
 138:Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Src/stm32h7xx_it.c ****   {
 141:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Src/stm32h7xx_it.c ****   }
 128              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Src/stm32h7xx_it.c ****   {
 129              		.loc 1 139 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE339:
 134              		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	SVC_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	SVC_Handler:
 142              	.LFB340:
 144:Src/stm32h7xx_it.c **** }
 145:Src/stm32h7xx_it.c **** 
 146:Src/stm32h7xx_it.c **** /**
 147:Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Src/stm32h7xx_it.c ****   */
 149:Src/stm32h7xx_it.c **** void SVC_Handler(void)
ARM GAS  /tmp/ccplaowz.s 			page 6


 150:Src/stm32h7xx_it.c **** {
 143              		.loc 1 150 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 151:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Src/stm32h7xx_it.c **** 
 153:Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Src/stm32h7xx_it.c **** 
 156:Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Src/stm32h7xx_it.c **** }
 148              		.loc 1 157 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE340:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DebugMon_Handler:
 161              	.LFB341:
 158:Src/stm32h7xx_it.c **** 
 159:Src/stm32h7xx_it.c **** /**
 160:Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 161:Src/stm32h7xx_it.c ****   */
 162:Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 163:Src/stm32h7xx_it.c **** {
 162              		.loc 1 163 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 164:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Src/stm32h7xx_it.c **** 
 166:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Src/stm32h7xx_it.c **** 
 169:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Src/stm32h7xx_it.c **** }
 167              		.loc 1 170 1 view .LVU23
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE341:
 172              		.section	.text.PendSV_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	PendSV_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	PendSV_Handler:
 180              	.LFB342:
 171:Src/stm32h7xx_it.c **** 
 172:Src/stm32h7xx_it.c **** /**
ARM GAS  /tmp/ccplaowz.s 			page 7


 173:Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Src/stm32h7xx_it.c ****   */
 175:Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 176:Src/stm32h7xx_it.c **** {
 181              		.loc 1 176 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 177:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Src/stm32h7xx_it.c **** 
 179:Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Src/stm32h7xx_it.c **** 
 182:Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Src/stm32h7xx_it.c **** }
 186              		.loc 1 183 1 view .LVU25
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE342:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	SysTick_Handler:
 199              	.LFB343:
 184:Src/stm32h7xx_it.c **** 
 185:Src/stm32h7xx_it.c **** /**
 186:Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 187:Src/stm32h7xx_it.c ****   */
 188:Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 189:Src/stm32h7xx_it.c **** {
 200              		.loc 1 189 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 190:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Src/stm32h7xx_it.c **** 
 192:Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Src/stm32h7xx_it.c ****   HAL_IncTick();
 209              		.loc 1 193 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 194:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Src/stm32h7xx_it.c **** 
 196:Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Src/stm32h7xx_it.c **** }
 212              		.loc 1 197 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
ARM GAS  /tmp/ccplaowz.s 			page 8


 215              	.LFE343:
 217              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	DMA1_Stream2_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	DMA1_Stream2_IRQHandler:
 225              	.LFB344:
 198:Src/stm32h7xx_it.c **** 
 199:Src/stm32h7xx_it.c **** /******************************************************************************/
 200:Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 201:Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 204:Src/stm32h7xx_it.c **** /******************************************************************************/
 205:Src/stm32h7xx_it.c **** 
 206:Src/stm32h7xx_it.c **** /**
 207:Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 208:Src/stm32h7xx_it.c ****   */
 209:Src/stm32h7xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 210:Src/stm32h7xx_it.c **** {
 226              		.loc 1 210 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI1:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 211:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 212:Src/stm32h7xx_it.c **** 
 213:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 214:Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 235              		.loc 1 214 3 view .LVU30
 236 0002 0248     		ldr	r0, .L18
 237 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 238              	.LVL1:
 215:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 216:Src/stm32h7xx_it.c **** 
 217:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 218:Src/stm32h7xx_it.c **** }
 239              		.loc 1 218 1 is_stmt 0 view .LVU31
 240 0008 08BD     		pop	{r3, pc}
 241              	.L19:
 242 000a 00BF     		.align	2
 243              	.L18:
 244 000c 00000000 		.word	hdma_dac1_ch1
 245              		.cfi_endproc
 246              	.LFE344:
 248              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	DMA1_Stream3_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
ARM GAS  /tmp/ccplaowz.s 			page 9


 255              	DMA1_Stream3_IRQHandler:
 256              	.LFB345:
 219:Src/stm32h7xx_it.c **** 
 220:Src/stm32h7xx_it.c **** /**
 221:Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 222:Src/stm32h7xx_it.c ****   */
 223:Src/stm32h7xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 224:Src/stm32h7xx_it.c **** {
 257              		.loc 1 224 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI2:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 225:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 226:Src/stm32h7xx_it.c **** 
 227:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 228:Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch2);
 266              		.loc 1 228 3 view .LVU33
 267 0002 0248     		ldr	r0, .L22
 268 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 269              	.LVL2:
 229:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 230:Src/stm32h7xx_it.c **** 
 231:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 232:Src/stm32h7xx_it.c **** }
 270              		.loc 1 232 1 is_stmt 0 view .LVU34
 271 0008 08BD     		pop	{r3, pc}
 272              	.L23:
 273 000a 00BF     		.align	2
 274              	.L22:
 275 000c 00000000 		.word	hdma_dac1_ch2
 276              		.cfi_endproc
 277              	.LFE345:
 279              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 280              		.align	1
 281              		.global	DMA1_Stream4_IRQHandler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	DMA1_Stream4_IRQHandler:
 287              	.LFB346:
 233:Src/stm32h7xx_it.c **** 
 234:Src/stm32h7xx_it.c **** /**
 235:Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 236:Src/stm32h7xx_it.c ****   */
 237:Src/stm32h7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 238:Src/stm32h7xx_it.c **** {
 288              		.loc 1 238 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI3:
ARM GAS  /tmp/ccplaowz.s 			page 10


 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 239:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 240:Src/stm32h7xx_it.c **** 
 241:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 242:Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 297              		.loc 1 242 3 view .LVU36
 298 0002 0248     		ldr	r0, .L26
 299 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 300              	.LVL3:
 243:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 244:Src/stm32h7xx_it.c **** 
 245:Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 246:Src/stm32h7xx_it.c **** }
 301              		.loc 1 246 1 is_stmt 0 view .LVU37
 302 0008 08BD     		pop	{r3, pc}
 303              	.L27:
 304 000a 00BF     		.align	2
 305              	.L26:
 306 000c 00000000 		.word	hdma_adc1
 307              		.cfi_endproc
 308              	.LFE346:
 310              		.section	.text.ADC_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	ADC_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 317              	ADC_IRQHandler:
 318              	.LFB347:
 247:Src/stm32h7xx_it.c **** 
 248:Src/stm32h7xx_it.c **** /**
 249:Src/stm32h7xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 250:Src/stm32h7xx_it.c ****   */
 251:Src/stm32h7xx_it.c **** void ADC_IRQHandler(void)
 252:Src/stm32h7xx_it.c **** {
 319              		.loc 1 252 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 253:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 254:Src/stm32h7xx_it.c **** 
 255:Src/stm32h7xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 256:Src/stm32h7xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 328              		.loc 1 256 3 view .LVU39
 329 0002 0348     		ldr	r0, .L30
 330 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 331              	.LVL4:
 257:Src/stm32h7xx_it.c ****   HAL_ADC_IRQHandler(&hadc2);
 332              		.loc 1 257 3 view .LVU40
 333 0008 0248     		ldr	r0, .L30+4
ARM GAS  /tmp/ccplaowz.s 			page 11


 334 000a FFF7FEFF 		bl	HAL_ADC_IRQHandler
 335              	.LVL5:
 258:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 259:Src/stm32h7xx_it.c **** 
 260:Src/stm32h7xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 261:Src/stm32h7xx_it.c **** }
 336              		.loc 1 261 1 is_stmt 0 view .LVU41
 337 000e 08BD     		pop	{r3, pc}
 338              	.L31:
 339              		.align	2
 340              	.L30:
 341 0010 00000000 		.word	hadc1
 342 0014 00000000 		.word	hadc2
 343              		.cfi_endproc
 344              	.LFE347:
 346              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 347              		.align	1
 348              		.global	TIM1_UP_IRQHandler
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	TIM1_UP_IRQHandler:
 354              	.LFB348:
 262:Src/stm32h7xx_it.c **** 
 263:Src/stm32h7xx_it.c **** /**
 264:Src/stm32h7xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 265:Src/stm32h7xx_it.c ****   */
 266:Src/stm32h7xx_it.c **** void TIM1_UP_IRQHandler(void)
 267:Src/stm32h7xx_it.c **** {
 355              		.loc 1 267 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 268:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 269:Src/stm32h7xx_it.c **** 
 270:Src/stm32h7xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 271:Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 364              		.loc 1 271 3 view .LVU43
 365 0002 0248     		ldr	r0, .L34
 366 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 367              	.LVL6:
 272:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 273:Src/stm32h7xx_it.c **** 
 274:Src/stm32h7xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 275:Src/stm32h7xx_it.c **** }
 368              		.loc 1 275 1 is_stmt 0 view .LVU44
 369 0008 08BD     		pop	{r3, pc}
 370              	.L35:
 371 000a 00BF     		.align	2
 372              	.L34:
 373 000c 00000000 		.word	htim1
 374              		.cfi_endproc
ARM GAS  /tmp/ccplaowz.s 			page 12


 375              	.LFE348:
 377              		.text
 378              	.Letext0:
 379              		.file 2 "/home/julius/University/JKU/NetworkedES/arm/arm-none-eabi/include/machine/_default_types.
 380              		.file 3 "/home/julius/University/JKU/NetworkedES/arm/arm-none-eabi/include/sys/_stdint.h"
 381              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 382              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 383              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 384              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 385              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 386              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 387              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccplaowz.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/ccplaowz.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccplaowz.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccplaowz.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:72     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccplaowz.s:89     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccplaowz.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:118    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccplaowz.s:135    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:141    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccplaowz.s:154    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:160    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccplaowz.s:173    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccplaowz.s:192    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccplaowz.s:198    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccplaowz.s:218    .text.DMA1_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccplaowz.s:224    .text.DMA1_Stream2_IRQHandler:0000000000000000 DMA1_Stream2_IRQHandler
     /tmp/ccplaowz.s:244    .text.DMA1_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccplaowz.s:249    .text.DMA1_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccplaowz.s:255    .text.DMA1_Stream3_IRQHandler:0000000000000000 DMA1_Stream3_IRQHandler
     /tmp/ccplaowz.s:275    .text.DMA1_Stream3_IRQHandler:000000000000000c $d
     /tmp/ccplaowz.s:280    .text.DMA1_Stream4_IRQHandler:0000000000000000 $t
     /tmp/ccplaowz.s:286    .text.DMA1_Stream4_IRQHandler:0000000000000000 DMA1_Stream4_IRQHandler
     /tmp/ccplaowz.s:306    .text.DMA1_Stream4_IRQHandler:000000000000000c $d
     /tmp/ccplaowz.s:311    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccplaowz.s:317    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccplaowz.s:341    .text.ADC_IRQHandler:0000000000000010 $d
     /tmp/ccplaowz.s:347    .text.TIM1_UP_IRQHandler:0000000000000000 $t
     /tmp/ccplaowz.s:353    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
     /tmp/ccplaowz.s:373    .text.TIM1_UP_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_dac1_ch1
hdma_dac1_ch2
hdma_adc1
HAL_ADC_IRQHandler
hadc1
hadc2
HAL_TIM_IRQHandler
htim1
