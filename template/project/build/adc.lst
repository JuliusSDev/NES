ARM GAS  /tmp/ccjC0vV5.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_ADC1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_ADC1_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_ADC1_Init:
  26              	.LFB335:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /* USER CODE BEGIN Header */
   2:Src/adc.c     **** /**
   3:Src/adc.c     ****   ******************************************************************************
   4:Src/adc.c     ****   * @file    adc.c
   5:Src/adc.c     ****   * @brief   This file provides code for the configuration
   6:Src/adc.c     ****   *          of the ADC instances.
   7:Src/adc.c     ****   ******************************************************************************
   8:Src/adc.c     ****   * @attention
   9:Src/adc.c     ****   *
  10:Src/adc.c     ****   * Copyright (c) 2024 STMicroelectronics.
  11:Src/adc.c     ****   * All rights reserved.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/adc.c     ****   * in the root directory of this software component.
  15:Src/adc.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** /* USER CODE END Header */
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  29:Src/adc.c     **** ADC_HandleTypeDef hadc3;
  30:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  31:Src/adc.c     **** 
ARM GAS  /tmp/ccjC0vV5.s 			page 2


  32:Src/adc.c     **** /* ADC1 init function */
  33:Src/adc.c     **** void MX_ADC1_Init(void)
  34:Src/adc.c     **** {
  28              		.loc 1 34 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
  35:Src/adc.c     **** 
  36:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 0 */
  37:Src/adc.c     **** 
  38:Src/adc.c     ****   /* USER CODE END ADC1_Init 0 */
  39:Src/adc.c     **** 
  40:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  39              		.loc 1 40 3 view .LVU1
  40              		.loc 1 40 24 is_stmt 0 view .LVU2
  41 0004 0023     		movs	r3, #0
  42 0006 0793     		str	r3, [sp, #28]
  43 0008 0893     		str	r3, [sp, #32]
  44 000a 0993     		str	r3, [sp, #36]
  41:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  45              		.loc 1 41 3 is_stmt 1 view .LVU3
  46              		.loc 1 41 26 is_stmt 0 view .LVU4
  47 000c 0093     		str	r3, [sp]
  48 000e 0193     		str	r3, [sp, #4]
  49 0010 0293     		str	r3, [sp, #8]
  50 0012 0393     		str	r3, [sp, #12]
  51 0014 0493     		str	r3, [sp, #16]
  52 0016 0593     		str	r3, [sp, #20]
  53 0018 0693     		str	r3, [sp, #24]
  42:Src/adc.c     **** 
  43:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 1 */
  44:Src/adc.c     **** 
  45:Src/adc.c     ****   /* USER CODE END ADC1_Init 1 */
  46:Src/adc.c     **** 
  47:Src/adc.c     ****   /** Common config
  48:Src/adc.c     ****   */
  49:Src/adc.c     ****   hadc1.Instance = ADC1;
  54              		.loc 1 49 3 is_stmt 1 view .LVU5
  55              		.loc 1 49 18 is_stmt 0 view .LVU6
  56 001a 2048     		ldr	r0, .L9
  57 001c 204A     		ldr	r2, .L9+4
  58 001e 0260     		str	r2, [r0]
  50:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  59              		.loc 1 50 3 is_stmt 1 view .LVU7
  60              		.loc 1 50 29 is_stmt 0 view .LVU8
  61 0020 4360     		str	r3, [r0, #4]
  51:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
  62              		.loc 1 51 3 is_stmt 1 view .LVU9
  63              		.loc 1 51 25 is_stmt 0 view .LVU10
  64 0022 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccjC0vV5.s 			page 3


  52:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  65              		.loc 1 52 3 is_stmt 1 view .LVU11
  66              		.loc 1 52 27 is_stmt 0 view .LVU12
  67 0024 C360     		str	r3, [r0, #12]
  53:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  68              		.loc 1 53 3 is_stmt 1 view .LVU13
  69              		.loc 1 53 27 is_stmt 0 view .LVU14
  70 0026 0422     		movs	r2, #4
  71 0028 0261     		str	r2, [r0, #16]
  54:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  72              		.loc 1 54 3 is_stmt 1 view .LVU15
  73              		.loc 1 54 31 is_stmt 0 view .LVU16
  74 002a 0375     		strb	r3, [r0, #20]
  55:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  75              		.loc 1 55 3 is_stmt 1 view .LVU17
  76              		.loc 1 55 33 is_stmt 0 view .LVU18
  77 002c 4375     		strb	r3, [r0, #21]
  56:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  78              		.loc 1 56 3 is_stmt 1 view .LVU19
  79              		.loc 1 56 30 is_stmt 0 view .LVU20
  80 002e 0122     		movs	r2, #1
  81 0030 8261     		str	r2, [r0, #24]
  57:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  82              		.loc 1 57 3 is_stmt 1 view .LVU21
  83              		.loc 1 57 36 is_stmt 0 view .LVU22
  84 0032 0377     		strb	r3, [r0, #28]
  58:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T1_TRGO;
  85              		.loc 1 58 3 is_stmt 1 view .LVU23
  86              		.loc 1 58 31 is_stmt 0 view .LVU24
  87 0034 4FF4A461 		mov	r1, #1312
  88 0038 4162     		str	r1, [r0, #36]
  59:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  89              		.loc 1 59 3 is_stmt 1 view .LVU25
  90              		.loc 1 59 35 is_stmt 0 view .LVU26
  91 003a 4FF48061 		mov	r1, #1024
  92 003e 8162     		str	r1, [r0, #40]
  60:Src/adc.c     ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_ONESHOT;
  93              		.loc 1 60 3 is_stmt 1 view .LVU27
  94              		.loc 1 60 39 is_stmt 0 view .LVU28
  95 0040 C262     		str	r2, [r0, #44]
  61:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  96              		.loc 1 61 3 is_stmt 1 view .LVU29
  97              		.loc 1 61 22 is_stmt 0 view .LVU30
  98 0042 0363     		str	r3, [r0, #48]
  62:Src/adc.c     ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
  99              		.loc 1 62 3 is_stmt 1 view .LVU31
 100              		.loc 1 62 27 is_stmt 0 view .LVU32
 101 0044 4363     		str	r3, [r0, #52]
  63:Src/adc.c     ****   hadc1.Init.OversamplingMode = DISABLE;
 102              		.loc 1 63 3 is_stmt 1 view .LVU33
 103              		.loc 1 63 31 is_stmt 0 view .LVU34
 104 0046 80F83830 		strb	r3, [r0, #56]
  64:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 105              		.loc 1 64 3 is_stmt 1 view .LVU35
 106              		.loc 1 64 7 is_stmt 0 view .LVU36
 107 004a FFF7FEFF 		bl	HAL_ADC_Init
 108              	.LVL0:
ARM GAS  /tmp/ccjC0vV5.s 			page 4


 109              		.loc 1 64 6 view .LVU37
 110 004e E0B9     		cbnz	r0, .L6
 111              	.L2:
  65:Src/adc.c     ****   {
  66:Src/adc.c     ****     Error_Handler();
  67:Src/adc.c     ****   }
  68:Src/adc.c     **** 
  69:Src/adc.c     ****   /** Configure the ADC multi-mode
  70:Src/adc.c     ****   */
  71:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 112              		.loc 1 71 3 is_stmt 1 view .LVU38
 113              		.loc 1 71 18 is_stmt 0 view .LVU39
 114 0050 0023     		movs	r3, #0
 115 0052 0793     		str	r3, [sp, #28]
  72:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 116              		.loc 1 72 3 is_stmt 1 view .LVU40
 117              		.loc 1 72 7 is_stmt 0 view .LVU41
 118 0054 07A9     		add	r1, sp, #28
 119 0056 1148     		ldr	r0, .L9
 120 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 121              	.LVL1:
 122              		.loc 1 72 6 view .LVU42
 123 005c C0B9     		cbnz	r0, .L7
 124              	.L3:
  73:Src/adc.c     ****   {
  74:Src/adc.c     ****     Error_Handler();
  75:Src/adc.c     ****   }
  76:Src/adc.c     **** 
  77:Src/adc.c     ****   /** Configure Regular Channel
  78:Src/adc.c     ****   */
  79:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 125              		.loc 1 79 3 is_stmt 1 view .LVU43
 126              		.loc 1 79 19 is_stmt 0 view .LVU44
 127 005e 114B     		ldr	r3, .L9+8
 128 0060 0093     		str	r3, [sp]
  80:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 129              		.loc 1 80 3 is_stmt 1 view .LVU45
 130              		.loc 1 80 16 is_stmt 0 view .LVU46
 131 0062 0623     		movs	r3, #6
 132 0064 0193     		str	r3, [sp, #4]
  81:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 133              		.loc 1 81 3 is_stmt 1 view .LVU47
 134              		.loc 1 81 24 is_stmt 0 view .LVU48
 135 0066 0023     		movs	r3, #0
 136 0068 0293     		str	r3, [sp, #8]
  82:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 137              		.loc 1 82 3 is_stmt 1 view .LVU49
 138              		.loc 1 82 22 is_stmt 0 view .LVU50
 139 006a 40F2FF72 		movw	r2, #2047
 140 006e 0392     		str	r2, [sp, #12]
  83:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 141              		.loc 1 83 3 is_stmt 1 view .LVU51
 142              		.loc 1 83 24 is_stmt 0 view .LVU52
 143 0070 0422     		movs	r2, #4
 144 0072 0492     		str	r2, [sp, #16]
  84:Src/adc.c     ****   sConfig.Offset = 0;
 145              		.loc 1 84 3 is_stmt 1 view .LVU53
ARM GAS  /tmp/ccjC0vV5.s 			page 5


 146              		.loc 1 84 18 is_stmt 0 view .LVU54
 147 0074 0593     		str	r3, [sp, #20]
  85:Src/adc.c     ****   sConfig.OffsetSignedSaturation = DISABLE;
 148              		.loc 1 85 3 is_stmt 1 view .LVU55
 149              		.loc 1 85 34 is_stmt 0 view .LVU56
 150 0076 8DF81930 		strb	r3, [sp, #25]
  86:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 151              		.loc 1 86 3 is_stmt 1 view .LVU57
 152              		.loc 1 86 7 is_stmt 0 view .LVU58
 153 007a 6946     		mov	r1, sp
 154 007c 0748     		ldr	r0, .L9
 155 007e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 156              	.LVL2:
 157              		.loc 1 86 6 view .LVU59
 158 0082 40B9     		cbnz	r0, .L8
 159              	.L1:
  87:Src/adc.c     ****   {
  88:Src/adc.c     ****     Error_Handler();
  89:Src/adc.c     ****   }
  90:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 2 */
  91:Src/adc.c     **** 
  92:Src/adc.c     ****   /* USER CODE END ADC1_Init 2 */
  93:Src/adc.c     **** 
  94:Src/adc.c     **** }
 160              		.loc 1 94 1 view .LVU60
 161 0084 0BB0     		add	sp, sp, #44
 162              	.LCFI2:
 163              		.cfi_remember_state
 164              		.cfi_def_cfa_offset 4
 165              		@ sp needed
 166 0086 5DF804FB 		ldr	pc, [sp], #4
 167              	.L6:
 168              	.LCFI3:
 169              		.cfi_restore_state
  66:Src/adc.c     ****   }
 170              		.loc 1 66 5 is_stmt 1 view .LVU61
 171 008a FFF7FEFF 		bl	Error_Handler
 172              	.LVL3:
 173 008e DFE7     		b	.L2
 174              	.L7:
  74:Src/adc.c     ****   }
 175              		.loc 1 74 5 view .LVU62
 176 0090 FFF7FEFF 		bl	Error_Handler
 177              	.LVL4:
 178 0094 E3E7     		b	.L3
 179              	.L8:
  88:Src/adc.c     ****   }
 180              		.loc 1 88 5 view .LVU63
 181 0096 FFF7FEFF 		bl	Error_Handler
 182              	.LVL5:
 183              		.loc 1 94 1 is_stmt 0 view .LVU64
 184 009a F3E7     		b	.L1
 185              	.L10:
 186              		.align	2
 187              	.L9:
 188 009c 00000000 		.word	.LANCHOR0
 189 00a0 00200240 		.word	1073881088
ARM GAS  /tmp/ccjC0vV5.s 			page 6


 190 00a4 02003004 		.word	70254594
 191              		.cfi_endproc
 192              	.LFE335:
 194              		.section	.text.MX_ADC2_Init,"ax",%progbits
 195              		.align	1
 196              		.global	MX_ADC2_Init
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	MX_ADC2_Init:
 202              	.LFB336:
  95:Src/adc.c     **** /* ADC2 init function */
  96:Src/adc.c     **** void MX_ADC2_Init(void)
  97:Src/adc.c     **** {
 203              		.loc 1 97 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 32
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 00B5     		push	{lr}
 208              	.LCFI4:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 14, -4
 211 0002 89B0     		sub	sp, sp, #36
 212              	.LCFI5:
 213              		.cfi_def_cfa_offset 40
  98:Src/adc.c     **** 
  99:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 0 */
 100:Src/adc.c     **** 
 101:Src/adc.c     ****   /* USER CODE END ADC2_Init 0 */
 102:Src/adc.c     **** 
 103:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
 214              		.loc 1 103 3 view .LVU66
 215              		.loc 1 103 26 is_stmt 0 view .LVU67
 216 0004 0023     		movs	r3, #0
 217 0006 0193     		str	r3, [sp, #4]
 218 0008 0293     		str	r3, [sp, #8]
 219 000a 0393     		str	r3, [sp, #12]
 220 000c 0493     		str	r3, [sp, #16]
 221 000e 0593     		str	r3, [sp, #20]
 222 0010 0693     		str	r3, [sp, #24]
 223 0012 0793     		str	r3, [sp, #28]
 104:Src/adc.c     **** 
 105:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 1 */
 106:Src/adc.c     **** 
 107:Src/adc.c     ****   /* USER CODE END ADC2_Init 1 */
 108:Src/adc.c     **** 
 109:Src/adc.c     ****   /** Common config
 110:Src/adc.c     ****   */
 111:Src/adc.c     ****   hadc2.Instance = ADC2;
 224              		.loc 1 111 3 is_stmt 1 view .LVU68
 225              		.loc 1 111 18 is_stmt 0 view .LVU69
 226 0014 1948     		ldr	r0, .L17
 227 0016 1A4A     		ldr	r2, .L17+4
 228 0018 0260     		str	r2, [r0]
 112:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 229              		.loc 1 112 3 is_stmt 1 view .LVU70
 230              		.loc 1 112 29 is_stmt 0 view .LVU71
ARM GAS  /tmp/ccjC0vV5.s 			page 7


 231 001a 4360     		str	r3, [r0, #4]
 113:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_16B;
 232              		.loc 1 113 3 is_stmt 1 view .LVU72
 233              		.loc 1 113 25 is_stmt 0 view .LVU73
 234 001c 8360     		str	r3, [r0, #8]
 114:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 235              		.loc 1 114 3 is_stmt 1 view .LVU74
 236              		.loc 1 114 27 is_stmt 0 view .LVU75
 237 001e C360     		str	r3, [r0, #12]
 115:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 238              		.loc 1 115 3 is_stmt 1 view .LVU76
 239              		.loc 1 115 27 is_stmt 0 view .LVU77
 240 0020 0422     		movs	r2, #4
 241 0022 0261     		str	r2, [r0, #16]
 116:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 242              		.loc 1 116 3 is_stmt 1 view .LVU78
 243              		.loc 1 116 31 is_stmt 0 view .LVU79
 244 0024 0375     		strb	r3, [r0, #20]
 117:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = DISABLE;
 245              		.loc 1 117 3 is_stmt 1 view .LVU80
 246              		.loc 1 117 33 is_stmt 0 view .LVU81
 247 0026 4375     		strb	r3, [r0, #21]
 118:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 1;
 248              		.loc 1 118 3 is_stmt 1 view .LVU82
 249              		.loc 1 118 30 is_stmt 0 view .LVU83
 250 0028 0122     		movs	r2, #1
 251 002a 8261     		str	r2, [r0, #24]
 119:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 119 3 is_stmt 1 view .LVU84
 253              		.loc 1 119 36 is_stmt 0 view .LVU85
 254 002c 0377     		strb	r3, [r0, #28]
 120:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 120 3 is_stmt 1 view .LVU86
 256              		.loc 1 120 31 is_stmt 0 view .LVU87
 257 002e 4362     		str	r3, [r0, #36]
 121:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 258              		.loc 1 121 3 is_stmt 1 view .LVU88
 259              		.loc 1 121 35 is_stmt 0 view .LVU89
 260 0030 8362     		str	r3, [r0, #40]
 122:Src/adc.c     ****   hadc2.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 261              		.loc 1 122 3 is_stmt 1 view .LVU90
 262              		.loc 1 122 39 is_stmt 0 view .LVU91
 263 0032 C362     		str	r3, [r0, #44]
 123:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 264              		.loc 1 123 3 is_stmt 1 view .LVU92
 265              		.loc 1 123 22 is_stmt 0 view .LVU93
 266 0034 0363     		str	r3, [r0, #48]
 124:Src/adc.c     ****   hadc2.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 267              		.loc 1 124 3 is_stmt 1 view .LVU94
 268              		.loc 1 124 27 is_stmt 0 view .LVU95
 269 0036 4363     		str	r3, [r0, #52]
 125:Src/adc.c     ****   hadc2.Init.OversamplingMode = DISABLE;
 270              		.loc 1 125 3 is_stmt 1 view .LVU96
 271              		.loc 1 125 31 is_stmt 0 view .LVU97
 272 0038 80F83830 		strb	r3, [r0, #56]
 126:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 273              		.loc 1 126 3 is_stmt 1 view .LVU98
ARM GAS  /tmp/ccjC0vV5.s 			page 8


 274              		.loc 1 126 7 is_stmt 0 view .LVU99
 275 003c FFF7FEFF 		bl	HAL_ADC_Init
 276              	.LVL6:
 277              		.loc 1 126 6 view .LVU100
 278 0040 A8B9     		cbnz	r0, .L15
 279              	.L12:
 127:Src/adc.c     ****   {
 128:Src/adc.c     ****     Error_Handler();
 129:Src/adc.c     ****   }
 130:Src/adc.c     **** 
 131:Src/adc.c     ****   /** Configure Regular Channel
 132:Src/adc.c     ****   */
 133:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 280              		.loc 1 133 3 is_stmt 1 view .LVU101
 281              		.loc 1 133 19 is_stmt 0 view .LVU102
 282 0042 104B     		ldr	r3, .L17+8
 283 0044 0193     		str	r3, [sp, #4]
 134:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 284              		.loc 1 134 3 is_stmt 1 view .LVU103
 285              		.loc 1 134 16 is_stmt 0 view .LVU104
 286 0046 0623     		movs	r3, #6
 287 0048 0293     		str	r3, [sp, #8]
 135:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 288              		.loc 1 135 3 is_stmt 1 view .LVU105
 289              		.loc 1 135 24 is_stmt 0 view .LVU106
 290 004a 0023     		movs	r3, #0
 291 004c 0393     		str	r3, [sp, #12]
 136:Src/adc.c     ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 292              		.loc 1 136 3 is_stmt 1 view .LVU107
 293              		.loc 1 136 22 is_stmt 0 view .LVU108
 294 004e 0E4A     		ldr	r2, .L17+12
 295 0050 0492     		str	r2, [sp, #16]
 137:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 296              		.loc 1 137 3 is_stmt 1 view .LVU109
 297              		.loc 1 137 24 is_stmt 0 view .LVU110
 298 0052 0422     		movs	r2, #4
 299 0054 0592     		str	r2, [sp, #20]
 138:Src/adc.c     ****   sConfig.Offset = 0;
 300              		.loc 1 138 3 is_stmt 1 view .LVU111
 301              		.loc 1 138 18 is_stmt 0 view .LVU112
 302 0056 0693     		str	r3, [sp, #24]
 139:Src/adc.c     ****   sConfig.OffsetSignedSaturation = DISABLE;
 303              		.loc 1 139 3 is_stmt 1 view .LVU113
 304              		.loc 1 139 34 is_stmt 0 view .LVU114
 305 0058 8DF81D30 		strb	r3, [sp, #29]
 140:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 306              		.loc 1 140 3 is_stmt 1 view .LVU115
 307              		.loc 1 140 7 is_stmt 0 view .LVU116
 308 005c 0DEB0201 		add	r1, sp, r2
 309 0060 0648     		ldr	r0, .L17
 310 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 311              	.LVL7:
 312              		.loc 1 140 6 view .LVU117
 313 0066 28B9     		cbnz	r0, .L16
 314              	.L11:
 141:Src/adc.c     ****   {
 142:Src/adc.c     ****     Error_Handler();
ARM GAS  /tmp/ccjC0vV5.s 			page 9


 143:Src/adc.c     ****   }
 144:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 2 */
 145:Src/adc.c     **** 
 146:Src/adc.c     ****   /* USER CODE END ADC2_Init 2 */
 147:Src/adc.c     **** 
 148:Src/adc.c     **** }
 315              		.loc 1 148 1 view .LVU118
 316 0068 09B0     		add	sp, sp, #36
 317              	.LCFI6:
 318              		.cfi_remember_state
 319              		.cfi_def_cfa_offset 4
 320              		@ sp needed
 321 006a 5DF804FB 		ldr	pc, [sp], #4
 322              	.L15:
 323              	.LCFI7:
 324              		.cfi_restore_state
 128:Src/adc.c     ****   }
 325              		.loc 1 128 5 is_stmt 1 view .LVU119
 326 006e FFF7FEFF 		bl	Error_Handler
 327              	.LVL8:
 328 0072 E6E7     		b	.L12
 329              	.L16:
 142:Src/adc.c     ****   }
 330              		.loc 1 142 5 view .LVU120
 331 0074 FFF7FEFF 		bl	Error_Handler
 332              	.LVL9:
 333              		.loc 1 148 1 is_stmt 0 view .LVU121
 334 0078 F6E7     		b	.L11
 335              	.L18:
 336 007a 00BF     		.align	2
 337              	.L17:
 338 007c 00000000 		.word	.LANCHOR1
 339 0080 00210240 		.word	1073881344
 340 0084 02003004 		.word	70254594
 341 0088 0000FF47 		.word	1207894016
 342              		.cfi_endproc
 343              	.LFE336:
 345              		.section	.text.MX_ADC3_Init,"ax",%progbits
 346              		.align	1
 347              		.global	MX_ADC3_Init
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	MX_ADC3_Init:
 353              	.LFB337:
 149:Src/adc.c     **** /* ADC3 init function */
 150:Src/adc.c     **** void MX_ADC3_Init(void)
 151:Src/adc.c     **** {
 354              		.loc 1 151 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 32
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 00B5     		push	{lr}
 359              	.LCFI8:
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 14, -4
 362 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccjC0vV5.s 			page 10


 363              	.LCFI9:
 364              		.cfi_def_cfa_offset 40
 152:Src/adc.c     **** 
 153:Src/adc.c     ****   /* USER CODE BEGIN ADC3_Init 0 */
 154:Src/adc.c     **** 
 155:Src/adc.c     ****   /* USER CODE END ADC3_Init 0 */
 156:Src/adc.c     **** 
 157:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
 365              		.loc 1 157 3 view .LVU123
 366              		.loc 1 157 26 is_stmt 0 view .LVU124
 367 0004 0023     		movs	r3, #0
 368 0006 0193     		str	r3, [sp, #4]
 369 0008 0293     		str	r3, [sp, #8]
 370 000a 0393     		str	r3, [sp, #12]
 371 000c 0493     		str	r3, [sp, #16]
 372 000e 0593     		str	r3, [sp, #20]
 373 0010 0693     		str	r3, [sp, #24]
 374 0012 0793     		str	r3, [sp, #28]
 158:Src/adc.c     **** 
 159:Src/adc.c     ****   /* USER CODE BEGIN ADC3_Init 1 */
 160:Src/adc.c     **** 
 161:Src/adc.c     ****   /* USER CODE END ADC3_Init 1 */
 162:Src/adc.c     **** 
 163:Src/adc.c     ****   /** Common config
 164:Src/adc.c     ****   */
 165:Src/adc.c     ****   hadc3.Instance = ADC3;
 375              		.loc 1 165 3 is_stmt 1 view .LVU125
 376              		.loc 1 165 18 is_stmt 0 view .LVU126
 377 0014 1B48     		ldr	r0, .L25
 378 0016 1C4A     		ldr	r2, .L25+4
 379 0018 0260     		str	r2, [r0]
 166:Src/adc.c     ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 380              		.loc 1 166 3 is_stmt 1 view .LVU127
 381              		.loc 1 166 29 is_stmt 0 view .LVU128
 382 001a 4360     		str	r3, [r0, #4]
 167:Src/adc.c     ****   hadc3.Init.Resolution = ADC_RESOLUTION_16B;
 383              		.loc 1 167 3 is_stmt 1 view .LVU129
 384              		.loc 1 167 25 is_stmt 0 view .LVU130
 385 001c 8360     		str	r3, [r0, #8]
 168:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 386              		.loc 1 168 3 is_stmt 1 view .LVU131
 387              		.loc 1 168 27 is_stmt 0 view .LVU132
 388 001e C360     		str	r3, [r0, #12]
 169:Src/adc.c     ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 389              		.loc 1 169 3 is_stmt 1 view .LVU133
 390              		.loc 1 169 27 is_stmt 0 view .LVU134
 391 0020 0422     		movs	r2, #4
 392 0022 0261     		str	r2, [r0, #16]
 170:Src/adc.c     ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 393              		.loc 1 170 3 is_stmt 1 view .LVU135
 394              		.loc 1 170 31 is_stmt 0 view .LVU136
 395 0024 0375     		strb	r3, [r0, #20]
 171:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = DISABLE;
 396              		.loc 1 171 3 is_stmt 1 view .LVU137
 397              		.loc 1 171 33 is_stmt 0 view .LVU138
 398 0026 4375     		strb	r3, [r0, #21]
 172:Src/adc.c     ****   hadc3.Init.NbrOfConversion = 1;
ARM GAS  /tmp/ccjC0vV5.s 			page 11


 399              		.loc 1 172 3 is_stmt 1 view .LVU139
 400              		.loc 1 172 30 is_stmt 0 view .LVU140
 401 0028 0122     		movs	r2, #1
 402 002a 8261     		str	r2, [r0, #24]
 173:Src/adc.c     ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 403              		.loc 1 173 3 is_stmt 1 view .LVU141
 404              		.loc 1 173 36 is_stmt 0 view .LVU142
 405 002c 0377     		strb	r3, [r0, #28]
 174:Src/adc.c     ****   hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIG_EXT_IT11;
 406              		.loc 1 174 3 is_stmt 1 view .LVU143
 407              		.loc 1 174 31 is_stmt 0 view .LVU144
 408 002e 4FF49862 		mov	r2, #1216
 409 0032 4262     		str	r2, [r0, #36]
 175:Src/adc.c     ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 410              		.loc 1 175 3 is_stmt 1 view .LVU145
 411              		.loc 1 175 35 is_stmt 0 view .LVU146
 412 0034 4FF48062 		mov	r2, #1024
 413 0038 8262     		str	r2, [r0, #40]
 176:Src/adc.c     ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 414              		.loc 1 176 3 is_stmt 1 view .LVU147
 415              		.loc 1 176 39 is_stmt 0 view .LVU148
 416 003a C362     		str	r3, [r0, #44]
 177:Src/adc.c     ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 417              		.loc 1 177 3 is_stmt 1 view .LVU149
 418              		.loc 1 177 22 is_stmt 0 view .LVU150
 419 003c 0363     		str	r3, [r0, #48]
 178:Src/adc.c     ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 420              		.loc 1 178 3 is_stmt 1 view .LVU151
 421              		.loc 1 178 27 is_stmt 0 view .LVU152
 422 003e 4363     		str	r3, [r0, #52]
 179:Src/adc.c     ****   hadc3.Init.OversamplingMode = DISABLE;
 423              		.loc 1 179 3 is_stmt 1 view .LVU153
 424              		.loc 1 179 31 is_stmt 0 view .LVU154
 425 0040 80F83830 		strb	r3, [r0, #56]
 180:Src/adc.c     ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 426              		.loc 1 180 3 is_stmt 1 view .LVU155
 427              		.loc 1 180 7 is_stmt 0 view .LVU156
 428 0044 FFF7FEFF 		bl	HAL_ADC_Init
 429              	.LVL10:
 430              		.loc 1 180 6 view .LVU157
 431 0048 A8B9     		cbnz	r0, .L23
 432              	.L20:
 181:Src/adc.c     ****   {
 182:Src/adc.c     ****     Error_Handler();
 183:Src/adc.c     ****   }
 184:Src/adc.c     **** 
 185:Src/adc.c     ****   /** Configure Regular Channel
 186:Src/adc.c     ****   */
 187:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 433              		.loc 1 187 3 is_stmt 1 view .LVU158
 434              		.loc 1 187 19 is_stmt 0 view .LVU159
 435 004a 104B     		ldr	r3, .L25+8
 436 004c 0193     		str	r3, [sp, #4]
 188:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 437              		.loc 1 188 3 is_stmt 1 view .LVU160
 438              		.loc 1 188 16 is_stmt 0 view .LVU161
 439 004e 0623     		movs	r3, #6
ARM GAS  /tmp/ccjC0vV5.s 			page 12


 440 0050 0293     		str	r3, [sp, #8]
 189:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 441              		.loc 1 189 3 is_stmt 1 view .LVU162
 442              		.loc 1 189 24 is_stmt 0 view .LVU163
 443 0052 0023     		movs	r3, #0
 444 0054 0393     		str	r3, [sp, #12]
 190:Src/adc.c     ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 445              		.loc 1 190 3 is_stmt 1 view .LVU164
 446              		.loc 1 190 22 is_stmt 0 view .LVU165
 447 0056 0E4A     		ldr	r2, .L25+12
 448 0058 0492     		str	r2, [sp, #16]
 191:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 449              		.loc 1 191 3 is_stmt 1 view .LVU166
 450              		.loc 1 191 24 is_stmt 0 view .LVU167
 451 005a 0422     		movs	r2, #4
 452 005c 0592     		str	r2, [sp, #20]
 192:Src/adc.c     ****   sConfig.Offset = 0;
 453              		.loc 1 192 3 is_stmt 1 view .LVU168
 454              		.loc 1 192 18 is_stmt 0 view .LVU169
 455 005e 0693     		str	r3, [sp, #24]
 193:Src/adc.c     ****   sConfig.OffsetSignedSaturation = DISABLE;
 456              		.loc 1 193 3 is_stmt 1 view .LVU170
 457              		.loc 1 193 34 is_stmt 0 view .LVU171
 458 0060 8DF81D30 		strb	r3, [sp, #29]
 194:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 459              		.loc 1 194 3 is_stmt 1 view .LVU172
 460              		.loc 1 194 7 is_stmt 0 view .LVU173
 461 0064 0DEB0201 		add	r1, sp, r2
 462 0068 0648     		ldr	r0, .L25
 463 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 464              	.LVL11:
 465              		.loc 1 194 6 view .LVU174
 466 006e 28B9     		cbnz	r0, .L24
 467              	.L19:
 195:Src/adc.c     ****   {
 196:Src/adc.c     ****     Error_Handler();
 197:Src/adc.c     ****   }
 198:Src/adc.c     ****   /* USER CODE BEGIN ADC3_Init 2 */
 199:Src/adc.c     **** 
 200:Src/adc.c     ****   /* USER CODE END ADC3_Init 2 */
 201:Src/adc.c     **** 
 202:Src/adc.c     **** }
 468              		.loc 1 202 1 view .LVU175
 469 0070 09B0     		add	sp, sp, #36
 470              	.LCFI10:
 471              		.cfi_remember_state
 472              		.cfi_def_cfa_offset 4
 473              		@ sp needed
 474 0072 5DF804FB 		ldr	pc, [sp], #4
 475              	.L23:
 476              	.LCFI11:
 477              		.cfi_restore_state
 182:Src/adc.c     ****   }
 478              		.loc 1 182 5 is_stmt 1 view .LVU176
 479 0076 FFF7FEFF 		bl	Error_Handler
 480              	.LVL12:
 481 007a E6E7     		b	.L20
ARM GAS  /tmp/ccjC0vV5.s 			page 13


 482              	.L24:
 196:Src/adc.c     ****   }
 483              		.loc 1 196 5 view .LVU177
 484 007c FFF7FEFF 		bl	Error_Handler
 485              	.LVL13:
 486              		.loc 1 202 1 is_stmt 0 view .LVU178
 487 0080 F6E7     		b	.L19
 488              	.L26:
 489 0082 00BF     		.align	2
 490              	.L25:
 491 0084 00000000 		.word	.LANCHOR2
 492 0088 00600258 		.word	1476550656
 493 008c 02003004 		.word	70254594
 494 0090 0000FF47 		.word	1207894016
 495              		.cfi_endproc
 496              	.LFE337:
 498              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 499              		.align	1
 500              		.global	HAL_ADC_MspInit
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	HAL_ADC_MspInit:
 506              	.LVL14:
 507              	.LFB338:
 203:Src/adc.c     **** 
 204:Src/adc.c     **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
 205:Src/adc.c     **** 
 206:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 207:Src/adc.c     **** {
 508              		.loc 1 207 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 64
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		.loc 1 207 1 is_stmt 0 view .LVU180
 513 0000 30B5     		push	{r4, r5, lr}
 514              	.LCFI12:
 515              		.cfi_def_cfa_offset 12
 516              		.cfi_offset 4, -12
 517              		.cfi_offset 5, -8
 518              		.cfi_offset 14, -4
 519 0002 91B0     		sub	sp, sp, #68
 520              	.LCFI13:
 521              		.cfi_def_cfa_offset 80
 208:Src/adc.c     **** 
 209:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 522              		.loc 1 209 3 is_stmt 1 view .LVU181
 523              		.loc 1 209 20 is_stmt 0 view .LVU182
 524 0004 0023     		movs	r3, #0
 525 0006 0B93     		str	r3, [sp, #44]
 526 0008 0C93     		str	r3, [sp, #48]
 527 000a 0D93     		str	r3, [sp, #52]
 528 000c 0E93     		str	r3, [sp, #56]
 529 000e 0F93     		str	r3, [sp, #60]
 210:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 530              		.loc 1 210 3 is_stmt 1 view .LVU183
 531              		.loc 1 210 15 is_stmt 0 view .LVU184
ARM GAS  /tmp/ccjC0vV5.s 			page 14


 532 0010 0368     		ldr	r3, [r0]
 533              		.loc 1 210 5 view .LVU185
 534 0012 914A     		ldr	r2, .L41
 535 0014 9342     		cmp	r3, r2
 536 0016 08D0     		beq	.L35
 211:Src/adc.c     ****   {
 212:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 213:Src/adc.c     **** 
 214:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 215:Src/adc.c     ****     /* ADC1 clock enable */
 216:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 217:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 218:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 219:Src/adc.c     ****     }
 220:Src/adc.c     **** 
 221:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 222:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 223:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 224:Src/adc.c     ****     /**ADC1 GPIO Configuration
 225:Src/adc.c     ****     PC2     ------> ADC1_INP12
 226:Src/adc.c     ****     PC3     ------> ADC1_INN12
 227:Src/adc.c     ****     PA0_C     ------> ADC1_INN1
 228:Src/adc.c     ****     PA1_C     ------> ADC1_INP1
 229:Src/adc.c     ****     PB1     ------> ADC1_INP5
 230:Src/adc.c     ****     PB0     ------> ADC1_INN5
 231:Src/adc.c     ****     */
 232:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 233:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 234:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 235:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 236:Src/adc.c     **** 
 237:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0;
 238:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 239:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 240:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 241:Src/adc.c     **** 
 242:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_OPEN);
 243:Src/adc.c     **** 
 244:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA1, SYSCFG_SWITCH_PA1_OPEN);
 245:Src/adc.c     **** 
 246:Src/adc.c     ****     /* ADC1 DMA Init */
 247:Src/adc.c     ****     /* ADC1 Init */
 248:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Stream4;
 249:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 250:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 251:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 252:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 253:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 254:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 255:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 256:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 257:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 258:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 259:Src/adc.c     ****     {
 260:Src/adc.c     ****       Error_Handler();
 261:Src/adc.c     ****     }
 262:Src/adc.c     **** 
ARM GAS  /tmp/ccjC0vV5.s 			page 15


 263:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 264:Src/adc.c     **** 
 265:Src/adc.c     ****     /* ADC1 interrupt Init */
 266:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 267:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 268:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 269:Src/adc.c     **** 
 270:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 271:Src/adc.c     ****   }
 272:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 537              		.loc 1 272 8 is_stmt 1 view .LVU186
 538              		.loc 1 272 10 is_stmt 0 view .LVU187
 539 0018 904A     		ldr	r2, .L41+4
 540 001a 9342     		cmp	r3, r2
 541 001c 7ED0     		beq	.L36
 273:Src/adc.c     ****   {
 274:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 275:Src/adc.c     **** 
 276:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 277:Src/adc.c     ****     /* ADC2 clock enable */
 278:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 279:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 280:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 281:Src/adc.c     ****     }
 282:Src/adc.c     **** 
 283:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 284:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 285:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 286:Src/adc.c     ****     /**ADC2 GPIO Configuration
 287:Src/adc.c     ****     PC2     ------> ADC2_INP12
 288:Src/adc.c     ****     PC3     ------> ADC2_INN12
 289:Src/adc.c     ****     PA0_C     ------> ADC2_INN1
 290:Src/adc.c     ****     PA1_C     ------> ADC2_INP1
 291:Src/adc.c     ****     PB1     ------> ADC2_INP5
 292:Src/adc.c     ****     PB0     ------> ADC2_INN5
 293:Src/adc.c     ****     */
 294:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 295:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 296:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 297:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 298:Src/adc.c     **** 
 299:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0;
 300:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 301:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 302:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 303:Src/adc.c     **** 
 304:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_OPEN);
 305:Src/adc.c     **** 
 306:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA1, SYSCFG_SWITCH_PA1_OPEN);
 307:Src/adc.c     **** 
 308:Src/adc.c     ****     /* ADC2 interrupt Init */
 309:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 310:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 311:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 312:Src/adc.c     **** 
 313:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 314:Src/adc.c     ****   }
ARM GAS  /tmp/ccjC0vV5.s 			page 16


 315:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 542              		.loc 1 315 8 is_stmt 1 view .LVU188
 543              		.loc 1 315 10 is_stmt 0 view .LVU189
 544 001e 904A     		ldr	r2, .L41+8
 545 0020 9342     		cmp	r3, r2
 546 0022 00F0D780 		beq	.L37
 547              	.LVL15:
 548              	.L27:
 316:Src/adc.c     ****   {
 317:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 318:Src/adc.c     **** 
 319:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 0 */
 320:Src/adc.c     ****     /* ADC3 clock enable */
 321:Src/adc.c     ****     __HAL_RCC_ADC3_CLK_ENABLE();
 322:Src/adc.c     **** 
 323:Src/adc.c     ****     __HAL_RCC_GPIOF_CLK_ENABLE();
 324:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 325:Src/adc.c     ****     /**ADC3 GPIO Configuration
 326:Src/adc.c     ****     PF10     ------> ADC3_INP6
 327:Src/adc.c     ****     PC2     ------> ADC3_INP12
 328:Src/adc.c     ****     PC2_C     ------> ADC3_INN1
 329:Src/adc.c     ****     PC3_C     ------> ADC3_INP1
 330:Src/adc.c     ****     */
 331:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 332:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 333:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 334:Src/adc.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 335:Src/adc.c     **** 
 336:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 337:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 338:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 339:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 340:Src/adc.c     **** 
 341:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC2, SYSCFG_SWITCH_PC2_OPEN);
 342:Src/adc.c     **** 
 343:Src/adc.c     ****     HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC3, SYSCFG_SWITCH_PC3_OPEN);
 344:Src/adc.c     **** 
 345:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 346:Src/adc.c     **** 
 347:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 1 */
 348:Src/adc.c     ****   }
 349:Src/adc.c     **** }
 549              		.loc 1 349 1 view .LVU190
 550 0026 11B0     		add	sp, sp, #68
 551              	.LCFI14:
 552              		.cfi_remember_state
 553              		.cfi_def_cfa_offset 12
 554              		@ sp needed
 555 0028 30BD     		pop	{r4, r5, pc}
 556              	.LVL16:
 557              	.L35:
 558              	.LCFI15:
 559              		.cfi_restore_state
 560              		.loc 1 349 1 view .LVU191
 561 002a 0446     		mov	r4, r0
 216:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 562              		.loc 1 216 5 is_stmt 1 view .LVU192
ARM GAS  /tmp/ccjC0vV5.s 			page 17


 216:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 563              		.loc 1 216 30 is_stmt 0 view .LVU193
 564 002c 8D4A     		ldr	r2, .L41+12
 565 002e 1368     		ldr	r3, [r2]
 566 0030 0133     		adds	r3, r3, #1
 567 0032 1360     		str	r3, [r2]
 217:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 568              		.loc 1 217 5 is_stmt 1 view .LVU194
 217:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 569              		.loc 1 217 7 is_stmt 0 view .LVU195
 570 0034 012B     		cmp	r3, #1
 571 0036 60D0     		beq	.L38
 572              	.L29:
 218:Src/adc.c     ****     }
 573              		.loc 1 218 7 is_stmt 1 discriminator 1 view .LVU196
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 574              		.loc 1 221 5 discriminator 1 view .LVU197
 575              	.LBB2:
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 576              		.loc 1 221 5 discriminator 1 view .LVU198
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 577              		.loc 1 221 5 discriminator 1 view .LVU199
 578 0038 8B4B     		ldr	r3, .L41+16
 579 003a D3F8E020 		ldr	r2, [r3, #224]
 580 003e 42F00402 		orr	r2, r2, #4
 581 0042 C3F8E020 		str	r2, [r3, #224]
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 582              		.loc 1 221 5 discriminator 1 view .LVU200
 583 0046 D3F8E020 		ldr	r2, [r3, #224]
 584 004a 02F00402 		and	r2, r2, #4
 585 004e 0192     		str	r2, [sp, #4]
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 586              		.loc 1 221 5 discriminator 1 view .LVU201
 587 0050 019A     		ldr	r2, [sp, #4]
 588              	.LBE2:
 221:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 589              		.loc 1 221 5 discriminator 1 view .LVU202
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 590              		.loc 1 222 5 discriminator 1 view .LVU203
 591              	.LBB3:
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 592              		.loc 1 222 5 discriminator 1 view .LVU204
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 593              		.loc 1 222 5 discriminator 1 view .LVU205
 594 0052 D3F8E020 		ldr	r2, [r3, #224]
 595 0056 42F00102 		orr	r2, r2, #1
 596 005a C3F8E020 		str	r2, [r3, #224]
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 597              		.loc 1 222 5 discriminator 1 view .LVU206
 598 005e D3F8E020 		ldr	r2, [r3, #224]
 599 0062 02F00102 		and	r2, r2, #1
 600 0066 0292     		str	r2, [sp, #8]
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 601              		.loc 1 222 5 discriminator 1 view .LVU207
 602 0068 029A     		ldr	r2, [sp, #8]
 603              	.LBE3:
 222:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/ccjC0vV5.s 			page 18


 604              		.loc 1 222 5 discriminator 1 view .LVU208
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 605              		.loc 1 223 5 discriminator 1 view .LVU209
 606              	.LBB4:
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 607              		.loc 1 223 5 discriminator 1 view .LVU210
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 608              		.loc 1 223 5 discriminator 1 view .LVU211
 609 006a D3F8E020 		ldr	r2, [r3, #224]
 610 006e 42F00202 		orr	r2, r2, #2
 611 0072 C3F8E020 		str	r2, [r3, #224]
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 612              		.loc 1 223 5 discriminator 1 view .LVU212
 613 0076 D3F8E030 		ldr	r3, [r3, #224]
 614 007a 03F00203 		and	r3, r3, #2
 615 007e 0393     		str	r3, [sp, #12]
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 616              		.loc 1 223 5 discriminator 1 view .LVU213
 617 0080 039B     		ldr	r3, [sp, #12]
 618              	.LBE4:
 223:Src/adc.c     ****     /**ADC1 GPIO Configuration
 619              		.loc 1 223 5 discriminator 1 view .LVU214
 232:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 620              		.loc 1 232 5 discriminator 1 view .LVU215
 232:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 621              		.loc 1 232 25 is_stmt 0 discriminator 1 view .LVU216
 622 0082 0C23     		movs	r3, #12
 623 0084 0B93     		str	r3, [sp, #44]
 233:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 624              		.loc 1 233 5 is_stmt 1 discriminator 1 view .LVU217
 233:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 625              		.loc 1 233 26 is_stmt 0 discriminator 1 view .LVU218
 626 0086 0325     		movs	r5, #3
 627 0088 0C95     		str	r5, [sp, #48]
 234:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 628              		.loc 1 234 5 is_stmt 1 discriminator 1 view .LVU219
 235:Src/adc.c     **** 
 629              		.loc 1 235 5 discriminator 1 view .LVU220
 630 008a 0BA9     		add	r1, sp, #44
 631 008c 7748     		ldr	r0, .L41+20
 632              	.LVL17:
 235:Src/adc.c     **** 
 633              		.loc 1 235 5 is_stmt 0 discriminator 1 view .LVU221
 634 008e FFF7FEFF 		bl	HAL_GPIO_Init
 635              	.LVL18:
 237:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 636              		.loc 1 237 5 is_stmt 1 discriminator 1 view .LVU222
 237:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 637              		.loc 1 237 25 is_stmt 0 discriminator 1 view .LVU223
 638 0092 0B95     		str	r5, [sp, #44]
 238:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 639              		.loc 1 238 5 is_stmt 1 discriminator 1 view .LVU224
 238:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 640              		.loc 1 238 26 is_stmt 0 discriminator 1 view .LVU225
 641 0094 0C95     		str	r5, [sp, #48]
 239:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 642              		.loc 1 239 5 is_stmt 1 discriminator 1 view .LVU226
ARM GAS  /tmp/ccjC0vV5.s 			page 19


 239:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 643              		.loc 1 239 26 is_stmt 0 discriminator 1 view .LVU227
 644 0096 0025     		movs	r5, #0
 645 0098 0D95     		str	r5, [sp, #52]
 240:Src/adc.c     **** 
 646              		.loc 1 240 5 is_stmt 1 discriminator 1 view .LVU228
 647 009a 0BA9     		add	r1, sp, #44
 648 009c 7448     		ldr	r0, .L41+24
 649 009e FFF7FEFF 		bl	HAL_GPIO_Init
 650              	.LVL19:
 242:Src/adc.c     **** 
 651              		.loc 1 242 5 discriminator 1 view .LVU229
 652 00a2 4FF08071 		mov	r1, #16777216
 653 00a6 0846     		mov	r0, r1
 654 00a8 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 655              	.LVL20:
 244:Src/adc.c     **** 
 656              		.loc 1 244 5 discriminator 1 view .LVU230
 657 00ac 4FF00071 		mov	r1, #33554432
 658 00b0 0846     		mov	r0, r1
 659 00b2 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 660              	.LVL21:
 248:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 661              		.loc 1 248 5 discriminator 1 view .LVU231
 248:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 662              		.loc 1 248 24 is_stmt 0 discriminator 1 view .LVU232
 663 00b6 6F48     		ldr	r0, .L41+28
 664 00b8 6F4B     		ldr	r3, .L41+32
 665 00ba 0360     		str	r3, [r0]
 249:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 666              		.loc 1 249 5 is_stmt 1 discriminator 1 view .LVU233
 249:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 667              		.loc 1 249 28 is_stmt 0 discriminator 1 view .LVU234
 668 00bc 0923     		movs	r3, #9
 669 00be 4360     		str	r3, [r0, #4]
 250:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 670              		.loc 1 250 5 is_stmt 1 discriminator 1 view .LVU235
 250:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 671              		.loc 1 250 30 is_stmt 0 discriminator 1 view .LVU236
 672 00c0 8560     		str	r5, [r0, #8]
 251:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 673              		.loc 1 251 5 is_stmt 1 discriminator 1 view .LVU237
 251:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 674              		.loc 1 251 30 is_stmt 0 discriminator 1 view .LVU238
 675 00c2 C560     		str	r5, [r0, #12]
 252:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 676              		.loc 1 252 5 is_stmt 1 discriminator 1 view .LVU239
 252:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 677              		.loc 1 252 27 is_stmt 0 discriminator 1 view .LVU240
 678 00c4 4FF48063 		mov	r3, #1024
 679 00c8 0361     		str	r3, [r0, #16]
 253:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 680              		.loc 1 253 5 is_stmt 1 discriminator 1 view .LVU241
 253:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 681              		.loc 1 253 40 is_stmt 0 discriminator 1 view .LVU242
 682 00ca 4FF48053 		mov	r3, #4096
 683 00ce 4361     		str	r3, [r0, #20]
ARM GAS  /tmp/ccjC0vV5.s 			page 20


 254:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 684              		.loc 1 254 5 is_stmt 1 discriminator 1 view .LVU243
 254:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 685              		.loc 1 254 37 is_stmt 0 discriminator 1 view .LVU244
 686 00d0 4FF48043 		mov	r3, #16384
 687 00d4 8361     		str	r3, [r0, #24]
 255:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 688              		.loc 1 255 5 is_stmt 1 discriminator 1 view .LVU245
 255:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 689              		.loc 1 255 25 is_stmt 0 discriminator 1 view .LVU246
 690 00d6 C561     		str	r5, [r0, #28]
 256:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 691              		.loc 1 256 5 is_stmt 1 discriminator 1 view .LVU247
 256:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 692              		.loc 1 256 29 is_stmt 0 discriminator 1 view .LVU248
 693 00d8 0562     		str	r5, [r0, #32]
 257:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 694              		.loc 1 257 5 is_stmt 1 discriminator 1 view .LVU249
 257:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 695              		.loc 1 257 29 is_stmt 0 discriminator 1 view .LVU250
 696 00da 4562     		str	r5, [r0, #36]
 258:Src/adc.c     ****     {
 697              		.loc 1 258 5 is_stmt 1 discriminator 1 view .LVU251
 258:Src/adc.c     ****     {
 698              		.loc 1 258 9 is_stmt 0 discriminator 1 view .LVU252
 699 00dc FFF7FEFF 		bl	HAL_DMA_Init
 700              	.LVL22:
 258:Src/adc.c     ****     {
 701              		.loc 1 258 8 discriminator 1 view .LVU253
 702 00e0 C8B9     		cbnz	r0, .L39
 703              	.L30:
 263:Src/adc.c     **** 
 704              		.loc 1 263 5 is_stmt 1 view .LVU254
 263:Src/adc.c     **** 
 705              		.loc 1 263 5 view .LVU255
 706 00e2 644B     		ldr	r3, .L41+28
 707 00e4 E364     		str	r3, [r4, #76]
 263:Src/adc.c     **** 
 708              		.loc 1 263 5 view .LVU256
 709 00e6 9C63     		str	r4, [r3, #56]
 263:Src/adc.c     **** 
 710              		.loc 1 263 5 view .LVU257
 266:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 711              		.loc 1 266 5 view .LVU258
 712 00e8 0022     		movs	r2, #0
 713 00ea 1146     		mov	r1, r2
 714 00ec 1220     		movs	r0, #18
 715 00ee FFF7FEFF 		bl	HAL_NVIC_SetPriority
 716              	.LVL23:
 267:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 717              		.loc 1 267 5 view .LVU259
 718 00f2 1220     		movs	r0, #18
 719 00f4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 720              	.LVL24:
 721 00f8 95E7     		b	.L27
 722              	.LVL25:
 723              	.L38:
ARM GAS  /tmp/ccjC0vV5.s 			page 21


 218:Src/adc.c     ****     }
 724              		.loc 1 218 7 view .LVU260
 725              	.LBB5:
 218:Src/adc.c     ****     }
 726              		.loc 1 218 7 view .LVU261
 218:Src/adc.c     ****     }
 727              		.loc 1 218 7 view .LVU262
 728 00fa 5B4B     		ldr	r3, .L41+16
 729 00fc D3F8D820 		ldr	r2, [r3, #216]
 730 0100 42F02002 		orr	r2, r2, #32
 731 0104 C3F8D820 		str	r2, [r3, #216]
 218:Src/adc.c     ****     }
 732              		.loc 1 218 7 view .LVU263
 733 0108 D3F8D830 		ldr	r3, [r3, #216]
 734 010c 03F02003 		and	r3, r3, #32
 735 0110 0093     		str	r3, [sp]
 218:Src/adc.c     ****     }
 736              		.loc 1 218 7 view .LVU264
 737 0112 009B     		ldr	r3, [sp]
 738 0114 90E7     		b	.L29
 739              	.LVL26:
 740              	.L39:
 218:Src/adc.c     ****     }
 741              		.loc 1 218 7 is_stmt 0 view .LVU265
 742              	.LBE5:
 260:Src/adc.c     ****     }
 743              		.loc 1 260 7 is_stmt 1 view .LVU266
 744 0116 FFF7FEFF 		bl	Error_Handler
 745              	.LVL27:
 746 011a E2E7     		b	.L30
 747              	.LVL28:
 748              	.L36:
 278:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 749              		.loc 1 278 5 view .LVU267
 278:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 750              		.loc 1 278 30 is_stmt 0 view .LVU268
 751 011c 514A     		ldr	r2, .L41+12
 752 011e 1368     		ldr	r3, [r2]
 753 0120 0133     		adds	r3, r3, #1
 754 0122 1360     		str	r3, [r2]
 279:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 755              		.loc 1 279 5 is_stmt 1 view .LVU269
 279:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 756              		.loc 1 279 7 is_stmt 0 view .LVU270
 757 0124 012B     		cmp	r3, #1
 758 0126 47D0     		beq	.L40
 759              	.L33:
 280:Src/adc.c     ****     }
 760              		.loc 1 280 7 is_stmt 1 discriminator 1 view .LVU271
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 761              		.loc 1 283 5 discriminator 1 view .LVU272
 762              	.LBB6:
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 763              		.loc 1 283 5 discriminator 1 view .LVU273
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 764              		.loc 1 283 5 discriminator 1 view .LVU274
 765 0128 4F4B     		ldr	r3, .L41+16
ARM GAS  /tmp/ccjC0vV5.s 			page 22


 766 012a D3F8E020 		ldr	r2, [r3, #224]
 767 012e 42F00402 		orr	r2, r2, #4
 768 0132 C3F8E020 		str	r2, [r3, #224]
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 769              		.loc 1 283 5 discriminator 1 view .LVU275
 770 0136 D3F8E020 		ldr	r2, [r3, #224]
 771 013a 02F00402 		and	r2, r2, #4
 772 013e 0592     		str	r2, [sp, #20]
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 773              		.loc 1 283 5 discriminator 1 view .LVU276
 774 0140 059A     		ldr	r2, [sp, #20]
 775              	.LBE6:
 283:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 776              		.loc 1 283 5 discriminator 1 view .LVU277
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 777              		.loc 1 284 5 discriminator 1 view .LVU278
 778              	.LBB7:
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 779              		.loc 1 284 5 discriminator 1 view .LVU279
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 780              		.loc 1 284 5 discriminator 1 view .LVU280
 781 0142 D3F8E020 		ldr	r2, [r3, #224]
 782 0146 42F00102 		orr	r2, r2, #1
 783 014a C3F8E020 		str	r2, [r3, #224]
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 784              		.loc 1 284 5 discriminator 1 view .LVU281
 785 014e D3F8E020 		ldr	r2, [r3, #224]
 786 0152 02F00102 		and	r2, r2, #1
 787 0156 0692     		str	r2, [sp, #24]
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 788              		.loc 1 284 5 discriminator 1 view .LVU282
 789 0158 069A     		ldr	r2, [sp, #24]
 790              	.LBE7:
 284:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 791              		.loc 1 284 5 discriminator 1 view .LVU283
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 792              		.loc 1 285 5 discriminator 1 view .LVU284
 793              	.LBB8:
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 794              		.loc 1 285 5 discriminator 1 view .LVU285
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 795              		.loc 1 285 5 discriminator 1 view .LVU286
 796 015a D3F8E020 		ldr	r2, [r3, #224]
 797 015e 42F00202 		orr	r2, r2, #2
 798 0162 C3F8E020 		str	r2, [r3, #224]
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 799              		.loc 1 285 5 discriminator 1 view .LVU287
 800 0166 D3F8E030 		ldr	r3, [r3, #224]
 801 016a 03F00203 		and	r3, r3, #2
 802 016e 0793     		str	r3, [sp, #28]
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 803              		.loc 1 285 5 discriminator 1 view .LVU288
 804 0170 079B     		ldr	r3, [sp, #28]
 805              	.LBE8:
 285:Src/adc.c     ****     /**ADC2 GPIO Configuration
 806              		.loc 1 285 5 discriminator 1 view .LVU289
 294:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccjC0vV5.s 			page 23


 807              		.loc 1 294 5 discriminator 1 view .LVU290
 294:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 808              		.loc 1 294 25 is_stmt 0 discriminator 1 view .LVU291
 809 0172 0C23     		movs	r3, #12
 810 0174 0B93     		str	r3, [sp, #44]
 295:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 811              		.loc 1 295 5 is_stmt 1 discriminator 1 view .LVU292
 295:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 812              		.loc 1 295 26 is_stmt 0 discriminator 1 view .LVU293
 813 0176 0324     		movs	r4, #3
 814 0178 0C94     		str	r4, [sp, #48]
 296:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 815              		.loc 1 296 5 is_stmt 1 discriminator 1 view .LVU294
 297:Src/adc.c     **** 
 816              		.loc 1 297 5 discriminator 1 view .LVU295
 817 017a 0BA9     		add	r1, sp, #44
 818 017c 3B48     		ldr	r0, .L41+20
 819              	.LVL29:
 297:Src/adc.c     **** 
 820              		.loc 1 297 5 is_stmt 0 discriminator 1 view .LVU296
 821 017e FFF7FEFF 		bl	HAL_GPIO_Init
 822              	.LVL30:
 299:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 823              		.loc 1 299 5 is_stmt 1 discriminator 1 view .LVU297
 299:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 824              		.loc 1 299 25 is_stmt 0 discriminator 1 view .LVU298
 825 0182 0B94     		str	r4, [sp, #44]
 300:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 826              		.loc 1 300 5 is_stmt 1 discriminator 1 view .LVU299
 300:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 827              		.loc 1 300 26 is_stmt 0 discriminator 1 view .LVU300
 828 0184 0C94     		str	r4, [sp, #48]
 301:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 829              		.loc 1 301 5 is_stmt 1 discriminator 1 view .LVU301
 301:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 830              		.loc 1 301 26 is_stmt 0 discriminator 1 view .LVU302
 831 0186 0024     		movs	r4, #0
 832 0188 0D94     		str	r4, [sp, #52]
 302:Src/adc.c     **** 
 833              		.loc 1 302 5 is_stmt 1 discriminator 1 view .LVU303
 834 018a 0BA9     		add	r1, sp, #44
 835 018c 3848     		ldr	r0, .L41+24
 836 018e FFF7FEFF 		bl	HAL_GPIO_Init
 837              	.LVL31:
 304:Src/adc.c     **** 
 838              		.loc 1 304 5 discriminator 1 view .LVU304
 839 0192 4FF08071 		mov	r1, #16777216
 840 0196 0846     		mov	r0, r1
 841 0198 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 842              	.LVL32:
 306:Src/adc.c     **** 
 843              		.loc 1 306 5 discriminator 1 view .LVU305
 844 019c 4FF00071 		mov	r1, #33554432
 845 01a0 0846     		mov	r0, r1
 846 01a2 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 847              	.LVL33:
 309:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
ARM GAS  /tmp/ccjC0vV5.s 			page 24


 848              		.loc 1 309 5 discriminator 1 view .LVU306
 849 01a6 2246     		mov	r2, r4
 850 01a8 2146     		mov	r1, r4
 851 01aa 1220     		movs	r0, #18
 852 01ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 853              	.LVL34:
 310:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 854              		.loc 1 310 5 discriminator 1 view .LVU307
 855 01b0 1220     		movs	r0, #18
 856 01b2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 857              	.LVL35:
 858 01b6 36E7     		b	.L27
 859              	.LVL36:
 860              	.L40:
 280:Src/adc.c     ****     }
 861              		.loc 1 280 7 view .LVU308
 862              	.LBB9:
 280:Src/adc.c     ****     }
 863              		.loc 1 280 7 view .LVU309
 280:Src/adc.c     ****     }
 864              		.loc 1 280 7 view .LVU310
 865 01b8 2B4B     		ldr	r3, .L41+16
 866 01ba D3F8D820 		ldr	r2, [r3, #216]
 867 01be 42F02002 		orr	r2, r2, #32
 868 01c2 C3F8D820 		str	r2, [r3, #216]
 280:Src/adc.c     ****     }
 869              		.loc 1 280 7 view .LVU311
 870 01c6 D3F8D830 		ldr	r3, [r3, #216]
 871 01ca 03F02003 		and	r3, r3, #32
 872 01ce 0493     		str	r3, [sp, #16]
 280:Src/adc.c     ****     }
 873              		.loc 1 280 7 view .LVU312
 874 01d0 049B     		ldr	r3, [sp, #16]
 875 01d2 A9E7     		b	.L33
 876              	.L37:
 877              	.LBE9:
 321:Src/adc.c     **** 
 878              		.loc 1 321 5 view .LVU313
 879              	.LBB10:
 321:Src/adc.c     **** 
 880              		.loc 1 321 5 view .LVU314
 321:Src/adc.c     **** 
 881              		.loc 1 321 5 view .LVU315
 882 01d4 244B     		ldr	r3, .L41+16
 883 01d6 D3F8E020 		ldr	r2, [r3, #224]
 884 01da 42F08072 		orr	r2, r2, #16777216
 885 01de C3F8E020 		str	r2, [r3, #224]
 321:Src/adc.c     **** 
 886              		.loc 1 321 5 view .LVU316
 887 01e2 D3F8E020 		ldr	r2, [r3, #224]
 888 01e6 02F08072 		and	r2, r2, #16777216
 889 01ea 0892     		str	r2, [sp, #32]
 321:Src/adc.c     **** 
 890              		.loc 1 321 5 view .LVU317
 891 01ec 089A     		ldr	r2, [sp, #32]
 892              	.LBE10:
 321:Src/adc.c     **** 
ARM GAS  /tmp/ccjC0vV5.s 			page 25


 893              		.loc 1 321 5 view .LVU318
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 894              		.loc 1 323 5 view .LVU319
 895              	.LBB11:
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 896              		.loc 1 323 5 view .LVU320
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 897              		.loc 1 323 5 view .LVU321
 898 01ee D3F8E020 		ldr	r2, [r3, #224]
 899 01f2 42F02002 		orr	r2, r2, #32
 900 01f6 C3F8E020 		str	r2, [r3, #224]
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 901              		.loc 1 323 5 view .LVU322
 902 01fa D3F8E020 		ldr	r2, [r3, #224]
 903 01fe 02F02002 		and	r2, r2, #32
 904 0202 0992     		str	r2, [sp, #36]
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 905              		.loc 1 323 5 view .LVU323
 906 0204 099A     		ldr	r2, [sp, #36]
 907              	.LBE11:
 323:Src/adc.c     ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 908              		.loc 1 323 5 view .LVU324
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 909              		.loc 1 324 5 view .LVU325
 910              	.LBB12:
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 911              		.loc 1 324 5 view .LVU326
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 912              		.loc 1 324 5 view .LVU327
 913 0206 D3F8E020 		ldr	r2, [r3, #224]
 914 020a 42F00402 		orr	r2, r2, #4
 915 020e C3F8E020 		str	r2, [r3, #224]
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 916              		.loc 1 324 5 view .LVU328
 917 0212 D3F8E030 		ldr	r3, [r3, #224]
 918 0216 03F00403 		and	r3, r3, #4
 919 021a 0A93     		str	r3, [sp, #40]
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 920              		.loc 1 324 5 view .LVU329
 921 021c 0A9B     		ldr	r3, [sp, #40]
 922              	.LBE12:
 324:Src/adc.c     ****     /**ADC3 GPIO Configuration
 923              		.loc 1 324 5 view .LVU330
 331:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 924              		.loc 1 331 5 view .LVU331
 331:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 925              		.loc 1 331 25 is_stmt 0 view .LVU332
 926 021e 4FF48063 		mov	r3, #1024
 927 0222 0B93     		str	r3, [sp, #44]
 332:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 928              		.loc 1 332 5 is_stmt 1 view .LVU333
 332:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 929              		.loc 1 332 26 is_stmt 0 view .LVU334
 930 0224 0324     		movs	r4, #3
 931 0226 0C94     		str	r4, [sp, #48]
 333:Src/adc.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 932              		.loc 1 333 5 is_stmt 1 view .LVU335
ARM GAS  /tmp/ccjC0vV5.s 			page 26


 334:Src/adc.c     **** 
 933              		.loc 1 334 5 view .LVU336
 934 0228 0BA9     		add	r1, sp, #44
 935 022a 1448     		ldr	r0, .L41+36
 936              	.LVL37:
 334:Src/adc.c     **** 
 937              		.loc 1 334 5 is_stmt 0 view .LVU337
 938 022c FFF7FEFF 		bl	HAL_GPIO_Init
 939              	.LVL38:
 336:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 940              		.loc 1 336 5 is_stmt 1 view .LVU338
 336:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 941              		.loc 1 336 25 is_stmt 0 view .LVU339
 942 0230 0423     		movs	r3, #4
 943 0232 0B93     		str	r3, [sp, #44]
 337:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 944              		.loc 1 337 5 is_stmt 1 view .LVU340
 337:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 945              		.loc 1 337 26 is_stmt 0 view .LVU341
 946 0234 0C94     		str	r4, [sp, #48]
 338:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 947              		.loc 1 338 5 is_stmt 1 view .LVU342
 338:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 948              		.loc 1 338 26 is_stmt 0 view .LVU343
 949 0236 0023     		movs	r3, #0
 950 0238 0D93     		str	r3, [sp, #52]
 339:Src/adc.c     **** 
 951              		.loc 1 339 5 is_stmt 1 view .LVU344
 952 023a 0BA9     		add	r1, sp, #44
 953 023c 0B48     		ldr	r0, .L41+20
 954 023e FFF7FEFF 		bl	HAL_GPIO_Init
 955              	.LVL39:
 341:Src/adc.c     **** 
 956              		.loc 1 341 5 view .LVU345
 957 0242 4FF08061 		mov	r1, #67108864
 958 0246 0846     		mov	r0, r1
 959 0248 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 960              	.LVL40:
 343:Src/adc.c     **** 
 961              		.loc 1 343 5 view .LVU346
 962 024c 4FF00061 		mov	r1, #134217728
 963 0250 0846     		mov	r0, r1
 964 0252 FFF7FEFF 		bl	HAL_SYSCFG_AnalogSwitchConfig
 965              	.LVL41:
 966              		.loc 1 349 1 is_stmt 0 view .LVU347
 967 0256 E6E6     		b	.L27
 968              	.L42:
 969              		.align	2
 970              	.L41:
 971 0258 00200240 		.word	1073881088
 972 025c 00210240 		.word	1073881344
 973 0260 00600258 		.word	1476550656
 974 0264 00000000 		.word	.LANCHOR3
 975 0268 00440258 		.word	1476543488
 976 026c 00080258 		.word	1476528128
 977 0270 00040258 		.word	1476527104
 978 0274 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccjC0vV5.s 			page 27


 979 0278 70000240 		.word	1073873008
 980 027c 00140258 		.word	1476531200
 981              		.cfi_endproc
 982              	.LFE338:
 984              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 985              		.align	1
 986              		.global	HAL_ADC_MspDeInit
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	HAL_ADC_MspDeInit:
 992              	.LVL42:
 993              	.LFB339:
 350:Src/adc.c     **** 
 351:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 352:Src/adc.c     **** {
 994              		.loc 1 352 1 is_stmt 1 view -0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		.loc 1 352 1 is_stmt 0 view .LVU349
 999 0000 10B5     		push	{r4, lr}
 1000              	.LCFI16:
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 4, -8
 1003              		.cfi_offset 14, -4
 353:Src/adc.c     **** 
 354:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 1004              		.loc 1 354 3 is_stmt 1 view .LVU350
 1005              		.loc 1 354 15 is_stmt 0 view .LVU351
 1006 0002 0368     		ldr	r3, [r0]
 1007              		.loc 1 354 5 view .LVU352
 1008 0004 244A     		ldr	r2, .L53
 1009 0006 9342     		cmp	r3, r2
 1010 0008 06D0     		beq	.L50
 355:Src/adc.c     ****   {
 356:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 357:Src/adc.c     **** 
 358:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 359:Src/adc.c     ****     /* Peripheral clock disable */
 360:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED--;
 361:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 362:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 363:Src/adc.c     ****     }
 364:Src/adc.c     **** 
 365:Src/adc.c     ****     /**ADC1 GPIO Configuration
 366:Src/adc.c     ****     PC2     ------> ADC1_INP12
 367:Src/adc.c     ****     PC3     ------> ADC1_INN12
 368:Src/adc.c     ****     PA0_C     ------> ADC1_INN1
 369:Src/adc.c     ****     PA1_C     ------> ADC1_INP1
 370:Src/adc.c     ****     PB1     ------> ADC1_INP5
 371:Src/adc.c     ****     PB0     ------> ADC1_INN5
 372:Src/adc.c     ****     */
 373:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_2|GPIO_PIN_3);
 374:Src/adc.c     **** 
 375:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_1|GPIO_PIN_0);
 376:Src/adc.c     **** 
ARM GAS  /tmp/ccjC0vV5.s 			page 28


 377:Src/adc.c     ****     /* ADC1 DMA DeInit */
 378:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 379:Src/adc.c     **** 
 380:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 381:Src/adc.c     ****   /* USER CODE BEGIN ADC1:ADC_IRQn disable */
 382:Src/adc.c     ****     /**
 383:Src/adc.c     ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 384:Src/adc.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 385:Src/adc.c     ****     */
 386:Src/adc.c     ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 387:Src/adc.c     ****   /* USER CODE END ADC1:ADC_IRQn disable */
 388:Src/adc.c     **** 
 389:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 390:Src/adc.c     **** 
 391:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 392:Src/adc.c     ****   }
 393:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 1011              		.loc 1 393 8 is_stmt 1 view .LVU353
 1012              		.loc 1 393 10 is_stmt 0 view .LVU354
 1013 000a 244A     		ldr	r2, .L53+4
 1014 000c 9342     		cmp	r3, r2
 1015 000e 1CD0     		beq	.L51
 394:Src/adc.c     ****   {
 395:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 396:Src/adc.c     **** 
 397:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 398:Src/adc.c     ****     /* Peripheral clock disable */
 399:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED--;
 400:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 401:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 402:Src/adc.c     ****     }
 403:Src/adc.c     **** 
 404:Src/adc.c     ****     /**ADC2 GPIO Configuration
 405:Src/adc.c     ****     PC2     ------> ADC2_INP12
 406:Src/adc.c     ****     PC3     ------> ADC2_INN12
 407:Src/adc.c     ****     PA0_C     ------> ADC2_INN1
 408:Src/adc.c     ****     PA1_C     ------> ADC2_INP1
 409:Src/adc.c     ****     PB1     ------> ADC2_INP5
 410:Src/adc.c     ****     PB0     ------> ADC2_INN5
 411:Src/adc.c     ****     */
 412:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_2|GPIO_PIN_3);
 413:Src/adc.c     **** 
 414:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_1|GPIO_PIN_0);
 415:Src/adc.c     **** 
 416:Src/adc.c     ****     /* ADC2 interrupt Deinit */
 417:Src/adc.c     ****   /* USER CODE BEGIN ADC2:ADC_IRQn disable */
 418:Src/adc.c     ****     /**
 419:Src/adc.c     ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 420:Src/adc.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 421:Src/adc.c     ****     */
 422:Src/adc.c     ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 423:Src/adc.c     ****   /* USER CODE END ADC2:ADC_IRQn disable */
 424:Src/adc.c     **** 
 425:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 426:Src/adc.c     **** 
 427:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 428:Src/adc.c     ****   }
ARM GAS  /tmp/ccjC0vV5.s 			page 29


 429:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 1016              		.loc 1 429 8 is_stmt 1 view .LVU355
 1017              		.loc 1 429 10 is_stmt 0 view .LVU356
 1018 0010 234A     		ldr	r2, .L53+8
 1019 0012 9342     		cmp	r3, r2
 1020 0014 2ED0     		beq	.L52
 1021              	.LVL43:
 1022              	.L43:
 430:Src/adc.c     ****   {
 431:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 432:Src/adc.c     **** 
 433:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 0 */
 434:Src/adc.c     ****     /* Peripheral clock disable */
 435:Src/adc.c     ****     __HAL_RCC_ADC3_CLK_DISABLE();
 436:Src/adc.c     **** 
 437:Src/adc.c     ****     /**ADC3 GPIO Configuration
 438:Src/adc.c     ****     PF10     ------> ADC3_INP6
 439:Src/adc.c     ****     PC2     ------> ADC3_INP12
 440:Src/adc.c     ****     PC2_C     ------> ADC3_INN1
 441:Src/adc.c     ****     PC3_C     ------> ADC3_INP1
 442:Src/adc.c     ****     */
 443:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOF, GPIO_PIN_10);
 444:Src/adc.c     **** 
 445:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_2);
 446:Src/adc.c     **** 
 447:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 448:Src/adc.c     **** 
 449:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 1 */
 450:Src/adc.c     ****   }
 451:Src/adc.c     **** }
 1023              		.loc 1 451 1 view .LVU357
 1024 0016 10BD     		pop	{r4, pc}
 1025              	.LVL44:
 1026              	.L50:
 1027              		.loc 1 451 1 view .LVU358
 1028 0018 0446     		mov	r4, r0
 360:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1029              		.loc 1 360 5 is_stmt 1 view .LVU359
 360:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1030              		.loc 1 360 30 is_stmt 0 view .LVU360
 1031 001a 224A     		ldr	r2, .L53+12
 1032 001c 1368     		ldr	r3, [r2]
 1033 001e 013B     		subs	r3, r3, #1
 1034 0020 1360     		str	r3, [r2]
 361:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1035              		.loc 1 361 5 is_stmt 1 view .LVU361
 361:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1036              		.loc 1 361 7 is_stmt 0 view .LVU362
 1037 0022 33B9     		cbnz	r3, .L45
 362:Src/adc.c     ****     }
 1038              		.loc 1 362 7 is_stmt 1 view .LVU363
 1039 0024 204A     		ldr	r2, .L53+16
 1040 0026 D2F8D830 		ldr	r3, [r2, #216]
 1041 002a 23F02003 		bic	r3, r3, #32
 1042 002e C2F8D830 		str	r3, [r2, #216]
 1043              	.L45:
 373:Src/adc.c     **** 
ARM GAS  /tmp/ccjC0vV5.s 			page 30


 1044              		.loc 1 373 5 view .LVU364
 1045 0032 0C21     		movs	r1, #12
 1046 0034 1D48     		ldr	r0, .L53+20
 1047              	.LVL45:
 373:Src/adc.c     **** 
 1048              		.loc 1 373 5 is_stmt 0 view .LVU365
 1049 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1050              	.LVL46:
 375:Src/adc.c     **** 
 1051              		.loc 1 375 5 is_stmt 1 view .LVU366
 1052 003a 0321     		movs	r1, #3
 1053 003c 1C48     		ldr	r0, .L53+24
 1054 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1055              	.LVL47:
 378:Src/adc.c     **** 
 1056              		.loc 1 378 5 view .LVU367
 1057 0042 E06C     		ldr	r0, [r4, #76]
 1058 0044 FFF7FEFF 		bl	HAL_DMA_DeInit
 1059              	.LVL48:
 1060 0048 E5E7     		b	.L43
 1061              	.LVL49:
 1062              	.L51:
 399:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1063              		.loc 1 399 5 view .LVU368
 399:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1064              		.loc 1 399 30 is_stmt 0 view .LVU369
 1065 004a 164A     		ldr	r2, .L53+12
 1066 004c 1368     		ldr	r3, [r2]
 1067 004e 013B     		subs	r3, r3, #1
 1068 0050 1360     		str	r3, [r2]
 400:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1069              		.loc 1 400 5 is_stmt 1 view .LVU370
 400:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1070              		.loc 1 400 7 is_stmt 0 view .LVU371
 1071 0052 33B9     		cbnz	r3, .L48
 401:Src/adc.c     ****     }
 1072              		.loc 1 401 7 is_stmt 1 view .LVU372
 1073 0054 144A     		ldr	r2, .L53+16
 1074 0056 D2F8D830 		ldr	r3, [r2, #216]
 1075 005a 23F02003 		bic	r3, r3, #32
 1076 005e C2F8D830 		str	r3, [r2, #216]
 1077              	.L48:
 412:Src/adc.c     **** 
 1078              		.loc 1 412 5 view .LVU373
 1079 0062 0C21     		movs	r1, #12
 1080 0064 1148     		ldr	r0, .L53+20
 1081              	.LVL50:
 412:Src/adc.c     **** 
 1082              		.loc 1 412 5 is_stmt 0 view .LVU374
 1083 0066 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1084              	.LVL51:
 414:Src/adc.c     **** 
 1085              		.loc 1 414 5 is_stmt 1 view .LVU375
 1086 006a 0321     		movs	r1, #3
 1087 006c 1048     		ldr	r0, .L53+24
 1088 006e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1089              	.LVL52:
ARM GAS  /tmp/ccjC0vV5.s 			page 31


 1090 0072 D0E7     		b	.L43
 1091              	.LVL53:
 1092              	.L52:
 435:Src/adc.c     **** 
 1093              		.loc 1 435 5 view .LVU376
 1094 0074 A2F5E052 		sub	r2, r2, #7168
 1095 0078 D2F8E030 		ldr	r3, [r2, #224]
 1096 007c 23F08073 		bic	r3, r3, #16777216
 1097 0080 C2F8E030 		str	r3, [r2, #224]
 443:Src/adc.c     **** 
 1098              		.loc 1 443 5 view .LVU377
 1099 0084 4FF48061 		mov	r1, #1024
 1100 0088 0A48     		ldr	r0, .L53+28
 1101              	.LVL54:
 443:Src/adc.c     **** 
 1102              		.loc 1 443 5 is_stmt 0 view .LVU378
 1103 008a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1104              	.LVL55:
 445:Src/adc.c     **** 
 1105              		.loc 1 445 5 is_stmt 1 view .LVU379
 1106 008e 0421     		movs	r1, #4
 1107 0090 0648     		ldr	r0, .L53+20
 1108 0092 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1109              	.LVL56:
 1110              		.loc 1 451 1 is_stmt 0 view .LVU380
 1111 0096 BEE7     		b	.L43
 1112              	.L54:
 1113              		.align	2
 1114              	.L53:
 1115 0098 00200240 		.word	1073881088
 1116 009c 00210240 		.word	1073881344
 1117 00a0 00600258 		.word	1476550656
 1118 00a4 00000000 		.word	.LANCHOR3
 1119 00a8 00440258 		.word	1476543488
 1120 00ac 00080258 		.word	1476528128
 1121 00b0 00040258 		.word	1476527104
 1122 00b4 00140258 		.word	1476531200
 1123              		.cfi_endproc
 1124              	.LFE339:
 1126              		.global	hdma_adc1
 1127              		.global	hadc3
 1128              		.global	hadc2
 1129              		.global	hadc1
 1130              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 1131              		.align	2
 1132              		.set	.LANCHOR3,. + 0
 1135              	HAL_RCC_ADC12_CLK_ENABLED:
 1136 0000 00000000 		.space	4
 1137              		.section	.bss.hadc1,"aw",%nobits
 1138              		.align	2
 1139              		.set	.LANCHOR0,. + 0
 1142              	hadc1:
 1143 0000 00000000 		.space	100
 1143      00000000 
 1143      00000000 
 1143      00000000 
 1143      00000000 
ARM GAS  /tmp/ccjC0vV5.s 			page 32


 1144              		.section	.bss.hadc2,"aw",%nobits
 1145              		.align	2
 1146              		.set	.LANCHOR1,. + 0
 1149              	hadc2:
 1150 0000 00000000 		.space	100
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1151              		.section	.bss.hadc3,"aw",%nobits
 1152              		.align	2
 1153              		.set	.LANCHOR2,. + 0
 1156              	hadc3:
 1157 0000 00000000 		.space	100
 1157      00000000 
 1157      00000000 
 1157      00000000 
 1157      00000000 
 1158              		.section	.bss.hdma_adc1,"aw",%nobits
 1159              		.align	2
 1160              		.set	.LANCHOR4,. + 0
 1163              	hdma_adc1:
 1164 0000 00000000 		.space	120
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1165              		.text
 1166              	.Letext0:
 1167              		.file 2 "/home/julius/University/JKU/NetworkedES/arm/arm-none-eabi/include/machine/_default_types.
 1168              		.file 3 "/home/julius/University/JKU/NetworkedES/arm/arm-none-eabi/include/sys/_stdint.h"
 1169              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1170              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1171              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1172              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1173              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1174              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 1175              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 1176              		.file 11 "Inc/adc.h"
 1177              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1178              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1179              		.file 14 "Inc/main.h"
ARM GAS  /tmp/ccjC0vV5.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccjC0vV5.s:19     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccjC0vV5.s:25     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccjC0vV5.s:188    .text.MX_ADC1_Init:000000000000009c $d
     /tmp/ccjC0vV5.s:195    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccjC0vV5.s:201    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccjC0vV5.s:338    .text.MX_ADC2_Init:000000000000007c $d
     /tmp/ccjC0vV5.s:346    .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/ccjC0vV5.s:352    .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/ccjC0vV5.s:491    .text.MX_ADC3_Init:0000000000000084 $d
     /tmp/ccjC0vV5.s:499    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccjC0vV5.s:505    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccjC0vV5.s:971    .text.HAL_ADC_MspInit:0000000000000258 $d
     /tmp/ccjC0vV5.s:985    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccjC0vV5.s:991    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccjC0vV5.s:1115   .text.HAL_ADC_MspDeInit:0000000000000098 $d
     /tmp/ccjC0vV5.s:1163   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/ccjC0vV5.s:1156   .bss.hadc3:0000000000000000 hadc3
     /tmp/ccjC0vV5.s:1149   .bss.hadc2:0000000000000000 hadc2
     /tmp/ccjC0vV5.s:1142   .bss.hadc1:0000000000000000 hadc1
     /tmp/ccjC0vV5.s:1131   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 $d
     /tmp/ccjC0vV5.s:1135   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 HAL_RCC_ADC12_CLK_ENABLED
     /tmp/ccjC0vV5.s:1138   .bss.hadc1:0000000000000000 $d
     /tmp/ccjC0vV5.s:1145   .bss.hadc2:0000000000000000 $d
     /tmp/ccjC0vV5.s:1152   .bss.hadc3:0000000000000000 $d
     /tmp/ccjC0vV5.s:1159   .bss.hdma_adc1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_SYSCFG_AnalogSwitchConfig
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
